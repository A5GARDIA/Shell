#!/bin/bash
#This script disables , deletes and/ or archive users on local system

ARCHIVE_DIR='/archive'


#Parse the options
usage(){
#Display the usage and exit
echo "Usage : ${0} [-dra] USER [USERN]..." >&2
echo 'Disable a local Linux account.'>&2
echo  '-d Deletes accounts instead of disabling them' >&2
echo ' -r Removes the home dir associated with the account'>&2
echo '-a Creates an archive of home directory associated with the accounts'>&2
exit 1
}
#Make sure that the script is being execeuted as root

if [[ "${UID}" -ne 0 ]]
then
        echo 'Please run with sudo or as root' >&2
        exit 1
fi



while getopts dra OPTION
do
case ${OPTION} in
d) DELETE_USER='true' ;;
r) REMOVE_OPTION='-r' ;;
a) ARCHIVE='true' ;;
?) usage ;;
esac
done


#Remove the optins while leaving the remaining arguments
shift "$(( OPTIND -1 ))"

#If the user doesn`t supply at least one argument , give them help
if [[ "${#}" -lt 1 ]]
then
        usage
fi

# Loop through all usernames supplied as arguments
for USERNAME in "${@}"
do
        echo "Processing user: ${USERNAME}"

# Make sure UID of the account is at least 1000

USERID=$(id -u ${USERNAME})
if [[ "${USERID}" -lt 1000 ]]
then
        echo "Refusing to remove ${USERNAME} with UID ${USERID}"
        exit 1
fi
#Create ana archive if requested

if [[ "${ARCHIVE}" = 'true' ]]
then
#Make sure  the dir exists

if [[ ! -d "${ARCHIVE_DIR}" ]]
then
        echo "Creating ${ARCHIVE_DIR} directory"
        mkdir -p ${ARCHIVE_DIR}
        if [[ "${?}" -ne 0 ]]
        then
if [[ "${#}" -lt 1 ]]
then
        usage
fi

# Loop through all usernames supplied as arguments
for USERNAME in "${@}"
do
        echo "Processing user: ${USERNAME}"

# Make sure UID of the account is at least 1000

USERID=$(id -u ${USERNAME})
if [[ "${USERID}" -lt 1000 ]]
then
        echo "Refusing to remove ${USERNAME} with UID ${USERID}"
        exit 1
fi
#Create ana archive if requested

if [[ "${ARCHIVE}" = 'true' ]]
then
#Make sure  the dir exists

if [[ ! -d "${ARCHIVE_DIR}" ]]
then
        echo "Creating ${ARCHIVE_DIR} directory"
        mkdir -p ${ARCHIVE_DIR}
        if [[ "${?}" -ne 0 ]]
        then
                echo "The archive directory ${ARCHIVE_DIR} could not be created " >&2
        fi
fi

HOME_DIR="/home/${SUSERNAME}"
ARCHIVE_FILE="${ARCHIVE_DIR}/${USERNAME}.tgz"
if [[ -d "${HOME_DIR}" ]]
then
        echo "Archiving ${HOME_DIR} to ${ARCHIVE_FILE}"
        tar -zcf ${ARCHIVE_FILE} ${HOME_DIR} &> /dev/null
        if [[ "${?} -ne 0" ]]
                then "Colud not create ${ARCHIVE_FILE}">&2
        exit 1
        fi
        else
                echo "${HOME_DIR} does not exists or it is not a dir" >&2
        exit 1
        fi
fi
if [[ "${DELETE_USER}" = 'true' ]]
then
        userdel ${REMOVE_OPTION} ${USERNAME}
        if [[ "${?}" -ne 0 ]]
        then
                echo "The Account ${USERNAME} was NOT deleted" >&2
                exit 1

        fi
                echo "The Account ${USERNAME} is deleted"
        else
                chage -E 0 ${USERNAME}

        if [[ "${?}" -ne 0 ]]
        then
                echo "The Account ${USERNAME} was NOT disbled" >&2
                exit 1
        fi
        echo "The Account ${USERNAME} is disabled"
        fi
done
exit 0
